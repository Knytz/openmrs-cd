var model = require('../model')
var utils = require('../../utils/utils')
var fs = require('fs')

module.exports = {

  getInstance: function() {

    var project = new model.Project();

    // Implement here the Project object methods
    project.getBuildScript = function () {
      return getBuildScript();
    }
    project.getArtifact = function (pomPath, metadata) {
      return getArtifact(pomPath, metadata)
    }
    project.getDeployScript = function (artifact) {
      return getDeployScript(artifact)
    }

    return project
  } 
}

var getBuildScript = function() {

  var buildScript = new model.Script();

  buildScript.type = "#!/bin/bash"
  buildScript.comments = "# Autogenerated script to build 'bahmniapps' type of projects"
  buildScript.value = "cd ./ui\n"
  buildScript.value = buildScript.value + "./scripts/package.sh\n"

  return buildScript    
}

var getDeployScript = function(artifact) {

  var deployScript = new model.Script();
  if (typeof artifact == 'undefined' ) {
    console.error("[ERROR] 'artifact' parameter must be provided in order to construct the 'deploy' script")
    process.exit(1)
  }
  deployScript.type = "#!/bin/bash"
  deployScript.comments = "# Autogenerated script to deploy 'bahmniapps' type of projects"
  deployScript.value = "mvn deploy:deploy-file -DgroupId=net.mekomsolutions -DartifactId=" + artifact.name + " -Dversion=" + artifact.version + " -Dpackaging=" + artifact.extension + " -DrepositoryId=mks-nexus -Durl=https://nexus.mekomsolutions.net/repository/maven-commits/ -Dfile=" + artifact.destFilename + "\n"
  
  return deployScript    
}

var getArtifact = function (pomPath, metadata) {

  var artifact = new model.Artifact();

  artifact.extension = "zip"
  artifact.path = "./ui/target"
  artifact.name = "bahmniapps"

      // Version is not managed through npm or maven project. Using the commit id instead.
  if (typeof metadata != 'undefined' && metadata != null && metadata.commit != "") {
    artifact.version = metadata.commit
    artifact.filename = artifact.name + "." + artifact.extension
    artifact.destFilename = artifact.name + "-" + artifact.version + "." + artifact.extension
  } else {
    artifact.version = ""
    artifact.filename = artifact.name + "." + artifact.extension
    artifact.destFilename = artifact.filename
  }

  return artifact
}