var model = require('../model')
var utils = require('../../utils/utils')
var fs = require('fs')

module.exports = {

  getInstance: function() {

    var project = new model.Project();

    // Implement here the Project object methods
    project.getBuildScript = function () {
      return getBuildScript();
    }
    project.getArtifact = function (pomPath, metadata) {
      
      var artifact = new model.Artifact();

      artifact.extension = "zip"
      artifact.path = "./ui/target"
      artifact.name = "bahmniapps"

      // Version is not managed through npm or maven project. Using the commit id instead.
      if (typeof metadata != 'undefined' && metadata != null && metadata.commit != "") {
        artifact.version = metadata.commit
        artifact.filename = artifact.name + "." + artifact.extension
        artifact.destFilename = artifact.name + "-" + artifact.version + "." + artifact.extension
      } else {
        artifact.version = ""
        artifact.filename = artifact.name + "." + artifact.extension
        artifact.destFilename = artifact.filename
      }
      
      return artifact
    }
    project.getDeployScript = function () {
      return getDeployScript()
    }

    return project
  } 
}

var getBuildScript = function() {

  var buildScript = new model.Script();

  buildScript.type = "#!/bin/bash"
  buildScript.comments = "# Autogenerated script to build 'bahmniapps' type of projects"
  buildScript.value = "cd ./ui\n"
  buildScript.value = buildScript.value + "./scripts/package.sh\n"

  return buildScript    
}

var getDeployScript = function() {

  var deployScript = new model.Script();

  deployScript.type = "#!/bin/bash"
  deployScript.comments = "# Autogenerated script to deploy 'bahmniapps' type of projects"
  deployScript.value = "mvn deploy:deploy-file -DgroupId=net.mekomsolutions -DartifactId=bahmniapps -Dversion=0.0.1-SNAPSHOT -Dpackaging=zip -DrepositoryId=mks-nexus-public -Durl=https://nexus.mekomsolutions.net/repository/maven-public/ -Dfile=bahmniapps.zip\n"

  return deployScript    
}