<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Job that will catch and parse a payload sent by a remote SCM service.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>payload</name>
          <description>There must be a &apos;payload&apos; POST parameter since it is provided by GitHub when it appends parameters to the webhook URL. We have no control on that aspect of GitHub&apos;s webhook service.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>type</name>
          <description>The type of the project hooked.
Type can be values such as &apos;distro&apos;, &apos;openmrsmodule&apos;, &apos;bahmniconfig&apos;, &apos;openmrsconfig&apos;, &apos;openmrscore&apos;...</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>service</name>
          <description>The SCM service used. Based on this parameter the payload parsing can be implemented differently
Currently only &apos;github&apos; is supported.</description>
          <defaultValue>github</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <authToken>669b165b0c061c78f1d6e7c23f93f263</authToken>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>node /opt/resources/webhook/webhook.js
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <jenkins.plugins.nodejs.NodeJSBuildWrapper plugin="nodejs@1.2.4">
      <nodeJSInstallationName>NodeJS 8.6.0</nodeJSInstallationName>
    </jenkins.plugins.nodejs.NodeJSBuildWrapper>
  </buildWrappers>
</project>