"use strict";
const model = require("../../models/model");
const utils = require("../../utils/utils");
const fs = require("fs");
const _ = require("lodash");
const log = require("npmlog");

module.exports = {
  getInstance: function() {
    var projectBuild = new model.ProjectBuild();

    projectBuild.getBuildScript = function() {
      return getBuildScript();
    };

    projectBuild.getArtifact = function(pomPath, commitMetadata) {
      return getArtifact(pomPath, commitMetadata);
    };

    projectBuild.getDeployScript = function(project) {
      return getDeployScript(project);
    };

    return projectBuild;
  }
};

var getArtifact = function(pomPath, commitMetadata) {
  if (_.isUndefined(commitMetadata) || _.isEmpty(commitMetadata)) {
    log.error(
      "",
      "No commit metadata was passed to Bahmni Apps' getArtifact(..)."
    );
    process.exit(1);
  }

  var artifact = new model.Artifact();
  artifact.name = "bahmniapps";
  // Bahmni Apps is not version-managed, we infer its version from either the branch name or commit ID.
  if (commitMetadata.branchName) {
    artifact.version = commitMetadata.branchName;
  } else {
    artifact.version = commitMetadata.commitId;
  }
  artifact.buildPath = "./ui/target";
  artifact.extension = "zip";
  artifact.filename = artifact.name + "." + artifact.extension;
  artifact.destFilename =
    artifact.name + "-" + artifact.version + "." + artifact.extension;

  // encapsulating the Maven project
  {
    var mavenProject = new model.MavenProject();
    mavenProject.groupId = "net.mekomsolutions";
    mavenProject.artifactId = artifact.name;
    mavenProject.version = artifact.version;
    artifact.mavenProject = mavenProject;
  }

  return artifact;
};

var getBuildScript = function() {
  var buildScript = new model.Script();

  buildScript.type = "#!/bin/bash";
  buildScript.comments =
    "# Autogenerated script to build 'bahmniapps' type of projects";
  buildScript.value = "cd ./ui\n";
  buildScript.value = buildScript.value + "./scripts/package.sh\n";

  return buildScript;
};

var getDeployScript = function(artifact) {
  var deployScript = new model.Script();
  if (_.isUndefined(artifact)) {
    log.error(
      "",
      "An artifact parameter must be provided to construct the Bahmni Apps deploy script."
    );
    process.exit(1);
  }
  deployScript.type = "#!/bin/bash";
  deployScript.comments =
    "# Autogenerated script to deploy 'bahmniapps' type of projects";
  deployScript.value = "nexus_envvars=$1 ; . $nexus_envvars\n";
  deployScript.value =
    deployScript.value +
    "mvn deploy:deploy-file -DgroupId=net.mekomsolutions -DartifactId=" +
    artifact.name +
    " -Dversion=" +
    artifact.version +
    " -Dpackaging=" +
    artifact.extension +
    " -DrepositoryId=${NEXUS_REPO_ID} -Durl=${ARTIFACT_UPLOAD_URL_bahmniapps} -Dfile=" +
    artifact.destFilename +
    "\n";

  return deployScript;
};
