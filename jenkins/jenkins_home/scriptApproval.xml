<?xml version='1.1' encoding='UTF-8'?>
<scriptApproval plugin="script-security@1.46">
  <approvedScriptHashes/>
  <approvedSignatures/>
  <aclApprovedSignatures/>
  <approvedClasspathEntries/>
  <pendingScripts>
    <pendingScript>
      <context/>
      <script>import hudson.model.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def env = build.getEnvironment(listener)

def downstreamJob = hudson.model.Hudson.instance.getJob(&quot;instance-event&quot;)
def cause = new hudson.model.Cause.UpstreamCause(build)
def causeAction = new hudson.model.CauseAction(cause) 

def events = new JsonSlurper().parse( new File(&quot;${env.BUILD_PATH}/filtered_instances_events.json&quot;) )
for (i = 0; i &lt; events.size(); i++) {
  
  def params = new StringParameterValue(&quot;instanceEvent&quot;, JsonOutput.toJson(events[i]))
  def paramsAction = new ParametersAction(params) 

  hudson.model.Hudson.instance.queue.schedule(downstreamJob, 0, causeAction, paramsAction)
}</script>
      <language>groovy</language>
    </pendingScript>
  </pendingScripts>
  <pendingSignatures/>
  <pendingClasspathEntries/>
</scriptApproval>